{"version":3,"sources":["business-company-working.jpg","components/Table.js","components/Hero.js","pages/Home.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Table","props","sortColumn","event","sortKey","data","state","sort","a","b","localeCompare","setState","handleFilterChange","e","dataCopy","dataFiltered","filter","target","value","result","employee","name","includes","employees","bind","this","newData","filterOption","className","type","placeholder","id","style","width","padding","margin","onChange","scope","onClick","aria-hidden","map","item","key","data-item","firstName","lastName","position","salary","Component","Hero","backgroundImage","children","Home","salaryNumber","idNumber","Wrapper","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c509bdca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/business-company-working.06d638c9.jpg\";","import React, { Component } from \"react\";\nimport \"../index.css\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.employees,\n      dataFiltered: props.employees,\n      filter: \"\"\n    };\n    this.sortColumn = this.sortColumn.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.props.data);\n  }\n\n  sortColumn = (event, sortKey) => {\n    let data = this.state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n    this.setState({ data });\n  };\n\n  handleFilterChange = (e) => {\n    const dataCopy = this.state.dataFiltered;\n    this.setState({ filter: e.target.value });\n\n    if (e.target.value === \"\") {\n      this.setState({ dataFiltered: this.state.data });\n    } else {\n      const result = dataCopy.filter((employee) =>\n        employee.name.includes(this.state.filter)\n      );\n      this.setState({ dataFiltered: result });\n    }\n  };\n\n  render(props) {\n    let newData = this.state.dataFiltered;\n    let filterOption = this.state.filter;\n\n    return (\n      <div className=\"m-2 p-2\">\n        <input\n          type=\"text\"\n          placeholder=\"Filter by Employee Name\"\n          value={filterOption}\n          id=\"filter\"\n          style={{ width: \"270px\", padding: \"2px\", margin: \"5px\" }}\n          onChange={this.handleFilterChange}\n        />\n        <table className=\"table m-2 p-2\">\n          <thead>\n            <tr>\n              <th scope=\"col\" onClick={(e) => this.sortColumn(e, \"firstName\")}>\n                First Name <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\n              </th>\n              <th scope=\"col\" onClick={(e) => this.sortColumn(e, \"lastName\")}>\n                Last Name <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\n              </th>\n              <th scope=\"col\" onClick={(e) => this.sortColumn(e, \"position\")}>\n                Position <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\n              </th>\n              <th scope=\"col\" onClick={(e) => this.sortColumn(e, \"salary\")}>\n                Salary <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\n              </th>\n              <th scope=\"col\" onClick={(e) => this.sortColumn(e, \"id\")}>\n                ID <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {newData.map(function (item) {\n              return (\n                <tr key={item.id} data-item={item}>\n                  <td>{item.firstName}</td>\n                  <td>{item.lastName}</td>\n                  <td>{item.position}</td>\n                  <td>{item.salary}</td>\n                  <td>{item.id}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport \"./index.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/Hero\";\nimport Table from \"../components/Table\";\nimport { render } from \"react-dom\";\n\nclass Home extends Component {\n  state = {\n    employees: [\n      {\n        lastName: \"Nixon\",\n        firstName: \"Tiger\",\n        name: \"Tiger Nixon\",\n        position: \"System Architect\",\n        salaryNumber: 320000,\n        salary: \"$320,000\",\n        id: \"1\",\n        idNumber: 1\n      },\n      {\n        lastName: \"Khan\",\n        firstName: \"Amit\",\n        name: \"Amit Khan\",\n        position: \"Accountant\",\n        salary: \"$170,000\",\n        salaryNumber: 170000,\n        id: \"2\",\n        idNumber: 2\n      },\n      {\n        lastName: \"Cox\",\n        firstName: \"Ashton\",\n        name: \"Ashton Cox\",\n        position: \"Junior Technical Author\",\n        salary: \"$100,000\",\n        salaryNumber: 100000,\n        id: \"3\",\n        idNumber: 3\n      },\n      {\n        lastName: \"González\",\n        firstName: \"Diego\",\n        name: \"Diego González\",\n        position: \"Senior Javascript Developer\",\n        salary: \"$433,000\",\n        salaryNumber: 433000,\n        id: \"4\",\n        idNumber: 4\n      },\n      {\n        lastName: \"Satou\",\n        firstName: \"Airi\",\n        name: \"Airi Satou\",\n        position: \"Accountant\",\n        salary: \"$186,000\",\n        salaryNumber: 186000,\n        id: \"5\",\n        idNumber: 5\n      },\n      {\n        lastName: \"Williamson\",\n        firstName: \"Brielle\",\n        name: \"Brielle Williamson\",\n        position: \"Integration Specialist\",\n        salary: \"$372,000\",\n        salaryNumber: 372000,\n        id: \"6\",\n        idNumber: 6\n      },\n      {\n        lastName: \"Snider\",\n        firstName: \"Donna\",\n        name: \"Donna Snider\",\n        position: \"Customer Support\",\n        salary: \"$112,000\",\n        salaryNumber: 112000,\n        id: \"7\",\n        idNumber: 7\n      },\n      {\n        lastName: \"Kim\",\n        firstName: \"Jennifer\",\n        name: \"Jennifer Kim\",\n        position: \"Marketing\",\n        salary: \"$445,000\",\n        salaryNumber: 445000,\n        id: \"8\",\n        idNumber: 8\n      },\n      {\n        lastName: \"Bianchi\",\n        firstName: \"Daniela\",\n        name: \"Daniela Bianchi\",\n        position: \"Human Resources\",\n        salary: \"$233,000\",\n        salaryNumber: 233000,\n        id: \"9\",\n        idNumber: 9\n      }\n    ]\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotron jumbotron-fluid\">\n          <Hero backgroundImage=\"../business-company-working.jpg\">\n            <h1 className=\"display-4\">Employee Directory</h1>\n            <h2></h2>\n            <p className=\"lead\"></p>\n          </Hero>\n        </div>\n        <Table employees={this.state.employees} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../index.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport backgroundPic from './business-company-working.jpg';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\nimport Home from \"./pages/Home\";\nimport Hero from \"./components/Table\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <Wrapper>\n        <div>\n        <Route exact path=\"/\" component={Home} />\n        </div>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}